# üöÄ CI/CD PipelineÔºàMVPÁâàÔºâ
# „Åä„Å§„Åã„ÅÑ„Éù„Ç§„É≥„Éà - ÊúÄÂ∞èÈôêË®≠ÂÆö

name: CI/CD Pipeline

on:
  push:
    branches: [develop, staging, main]
    paths-ignore:
      - '*.md'
      - 'docs/**'
  pull_request:
    branches: [develop, main]

env:
  FLUTTER_VERSION: '3.35.0'
  JAVA_VERSION: '17'
  COVERAGE_THRESHOLD: 90

jobs:
  test:
    name: Quality Check & Build
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Run analyzer
        run: dart analyze --fatal-infos
      
      - name: Check code formatting
        run: dart format --output=none --set-exit-if-changed .
      
      - name: Run tests with coverage
        run: |
          flutter test --coverage
          COVERAGE=$(lcov --summary coverage/lcov.info | grep "lines" | cut -d':' -f2 | tr -d ' %')
          if (( $(echo "$COVERAGE < $COVERAGE_THRESHOLD" | bc -l) )); then 
            echo "‚ùå Coverage $COVERAGE% < $COVERAGE_THRESHOLD%"
            exit 1
          fi
          echo "‚úÖ Coverage $COVERAGE% >= $COVERAGE_THRESHOLD%"
      
      - name: Build APK
        run: flutter build apk --release
      
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: 7

  # Firebase App Distribution (develop branch only)
  deploy-development:
    name: Deploy to Development
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    
    steps:
      - name: Download APK
        uses: actions/download-artifact@v4
        with:
          name: app-release
          path: ./
      
      - name: Deploy to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          groups: developers
          file: app-release.apk
          releaseNotes: |
            üöÄ Development Build #${{ github.run_number }}
            Branch: ${{ github.ref_name }}
            Commit: ${{ github.sha }}